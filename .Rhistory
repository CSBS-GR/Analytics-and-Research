dput(meta_articles.m)
structure(list(ID = 1:9, Source.File = structure(c(1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L), .Label = c("aaa", "aab"), class = "factor"),
Newspaper = structure(c(2L, 2L, 2L, 1L, 2L, 3L, 4L, 4L, 5L
), .Label = c("Financial Times", "The Guardian", "The Mirror",
"The Sun", "The Times"), class = "factor"), Date = structure(c(2L,
2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L), .Label = c("07.29.2002",
"07.30.2002"), class = "factor"), Length = c(561L, 426L,
206L, 964L, 500L, 43L, 196L, 140L, 794L), Article = structure(c(8L,
3L, 6L, 1L, 5L, 4L, 8L, 2L, 7L), .Label = c("A tough question at the heart..",
"ADDED VALUE", "Cash fine to clear elderly...", "IN BRIEF…",
"Media: 'We want van Hoogstr…", "Token victory for HIV mother",
"US-scientist questions", "US scientist questions"), class = "factor")), .Names = c("ID",
"Source.File", "Newspaper", "Date", "Length", "Article"), class = "data.frame", row.names = c(NA,
-9L))
meta_articles.m <-
structure(list(ID = 1:9, Source.File = structure(c(1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L), .Label = c("aaa", "aab"), class = "factor"),
Newspaper = structure(c(2L, 2L, 2L, 1L, 2L, 3L, 4L, 4L, 5L
), .Label = c("Financial Times", "The Guardian", "The Mirror",
"The Sun", "The Times"), class = "factor"), Date = structure(c(2L,
2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L), .Label = c("07.29.2002",
"07.30.2002"), class = "factor"), Length = c(561L, 426L,
206L, 964L, 500L, 43L, 196L, 140L, 794L), Article = structure(c(8L,
3L, 6L, 1L, 5L, 4L, 8L, 2L, 7L), .Label = c("A tough question at the heart..",
"ADDED VALUE", "Cash fine to clear elderly...", "IN BRIEF…",
"Media: 'We want van Hoogstr…", "Token victory for HIV mother",
"US-scientist questions", "US scientist questions"), class = "factor")), .Names = c("ID",
"Source.File", "Newspaper", "Date", "Length", "Article"), class = "data.frame", row.names = c(NA,
-9L))
meta_articles.m
?adist
adist(meta_articles.m$Article)
values <- adist(meta_articles.m$Article)
values[values > 2] <- NA
values
d
rownames(d) <- meta_articles.m$Article
d <- adist(meta_articles.m$Article)
rownames(d) <- meta_articles.m$Article
hc <- hclust(as.dist(d))
plot(hc)
rect.hclust(hc,k=3)
df <- data.frame(str,cutree(hc,k=3))
df
plot(hc)
?cutree
df <- data.frame(meta_articles.m$Article,cutree(hc,h=2))
df
meta_articles.m <-
structure(list(ID = 1:9, Source.File = structure(c(1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L), .Label = c("aaa", "aab"), class = "factor"),
Newspaper = structure(c(2L, 2L, 2L, 1L, 2L, 3L, 4L, 4L, 5L
), .Label = c("Financial Times", "The Guardian", "The Mirror",
"The Sun", "The Times"), class = "factor"), Date = structure(c(2L,
2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L), .Label = c("07.29.2002",
"07.30.2002"), class = "factor"), Length = c(561L, 426L,
206L, 964L, 500L, 43L, 196L, 140L, 794L), Article = structure(c(8L,
3L, 6L, 1L, 5L, 4L, 8L, 2L, 7L), .Label = c("A tough question at the heart..",
"IN BEEEF...", "Cash fine to clear elderly...", "IN BRIEF...",
"Media: 'We want van Hoogstr…", "Token victory for HIV mother",
"US-scientist questions", "US scientist questions"), class = "factor")), .Names = c("ID",
"Source.File", "Newspaper", "Date", "Length", "Article"), class = "data.frame", row.names = c(NA,
-9L))
d <- adist(meta_articles.m$Article)
for i in
values[values > 2] <- NA
d  <- adist(str)
rownames(d) <- meta_articles.m$Article
hc <- hclust(as.dist(d))
plot(hc)
rect.hclust(hc,k=3)
?cutree
df <- data.frame(meta_articles.m$Article,cutree(hc,h=2))
df
rect.hclust(hc,h=2)
plot(hc)
rect.hclust(hc,h=2)
rect.hclust(hc,h=3)
plot(hc)
rect.hclust(hc,h=3)
df[unique(df[,2]),]
df[unique(df[,2]),]
d <- adist(meta_articles.m$Article)
d  <- adist(str)
rownames(d) <- meta_articles.m$Article
hc <- hclust(as.dist(d))
plot(hc)
rect.hclust(hc,h=3)
df <- data.frame(meta_articles.m$Article,cutree(hc,h=2))
df
df[unique(df[,2]),]
install.packages(c("ggplot2", "plotly", "rmarkdown", "knitr", "data.table"))
install.packages("ggvis")
install.packages("devtools")
require(httr)
require(XML)
curl_version()$ssl_version
basePage <- "https://www5.fdic.gov"
h <- handle(basePage)
GET(handle = h)
res <- GET(handle = h, path = "/sdi/download_large_list_outside.asp")
res
library(ggplot2)
library(readr)
library(dplyr)
library(maps)
library(maptools)
library(mapproj)
library(rgeos)
library(rgdal)
library(RColorBrewer)
library(ggplot2)
# for theme_map
theme_map <- function(base_size=9, base_family="") {
require(grid)
theme_bw(base_size=base_size, base_family=base_family) %+replace%
theme(axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank(),
panel.margin=unit(0, "lines"),
plot.background=element_blank(),
legend.justification = c(0,0),
legend.position = c(0,0)
)
}
# for US Map
us <- map_data("state")
us <- fortify(us, region="region")
# read your data and filter out points not in CONUS
setwd("C:\\Data\\Github\\Analytics-and-Research")
read_csv("allbranches.csv") %>%
filter(SIMS_LONGITUDE>=-124.848974 & SIMS_LONGITUDE<=-66.885444,
SIMS_LATITUDE>=24.396308 & SIMS_LATITUDE<=49.384358) -> data
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region, group=group),
fill="#ffffff", color="#7f7f7f", size=0.5)
gg <- gg + geom_point(data=data,
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE, color=factor(TOP10)),
size=0.3, alpha=1/10)
gg <- gg + geom_point(data=data[data$TOP10==1,],
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE), color="green",
size=0.3, alpha=1/10)
gg <- gg + coord_map("albers", lat0=39, lat1=45)
gg <- gg + theme_map() + guides(colour = guide_legend(override.aes = list(size=c(4,4), alpha=c(0.9,0.9) ))) +
scale_color_discrete(name="Top 4 Bank vs Rest of Field")
gg
data <- data[data$TOP10==1,]$TopBanks = "Top 10 Banks"
data <- data[data$TOP10==1,]$TopBanks = "All Other Banks"
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region, group=group),
fill="#ffffff", color="#7f7f7f", size=0.5)
gg <- gg + geom_point(data=data,
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE, color=factor(TopBanks)),
size=0.4, alpha=1/10)
gg <- gg + geom_point(data=data[data$TOP10==1,],
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE), color="green",
size=0.3, alpha=1/10)
gg <- gg + coord_map("albers", lat0=39, lat1=45)
gg <- gg + theme_map() + guides(colour = guide_legend(override.aes = list(size=c(4,4), alpha=c(0.9,0.9) ))) +
scale_color_discrete(name="Top 10 Banks vs Rest of Field")
gg
ggsave("all4.png",gg, width = 10, height =10)
data[data$TOP10==1,]$TopBanks = "Top 10 Banks"
data$TopBanks <- ""
data[data$TOP10==1,"TopBanks"] = "Top 10 Banks"
data[data$TOP10==0,"TopBanks"] = "All Other Banks"
summary(data)
table(data$TOP10, data$TopBanks)
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region, group=group),
fill="#ffffff", color="#7f7f7f", size=0.5)
gg <- gg + geom_point(data=data,
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE, color=factor(TopBanks)),
size=0.4, alpha=1/10)
gg <- ggplot()
gg <- gg + geom_map(data=us, map=us,
aes(x=long, y=lat, map_id=region, group=group),
fill="#ffffff", color="#7f7f7f", size=0.5)
gg <- gg + geom_point(data=data,
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE, color=factor(TopBanks)),
size=0.3, alpha=2/10)
gg <- gg + geom_point(data=data[data$TOP10==1,],
aes(x=SIMS_LONGITUDE, y=SIMS_LATITUDE), color="green",
size=0.3, alpha=1/10)
gg <- gg + coord_map("albers", lat0=39, lat1=45)
gg <- gg + theme_map() + guides(colour = guide_legend(override.aes = list(size=c(4,4), alpha=c(0.9,0.9) ))) +
scale_color_discrete(name="Top 10 Banks vs Rest of Field")
ggsave("all4.png",gg, width = 10, height =10)
